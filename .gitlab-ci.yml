# For the CI/CD Pipeline of Vulcan, secrets are managed through gitlab runner secrets
sync-repo:
  stage: build
  image: alpine:latest

  # allow us to run pipelines manually online or with a CI schedule
  only:
    - web
    - schedules

  before_script:
    # add the MITRE certificates to the docker image
    - apk update && apk add git openssh-client ca-certificates curl libressl
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_Root.crt http://pki.mitre.org/MITRE%20BA%20Root.crt
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_NPE_CA-1.crt http://pki.mitre.org/MITRE%20BA%20NPE%20CA-1.crt
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_NPE_CA-3.crt http://pki.mitre.org/MITRE%20BA%20NPE%20CA-3.crt
    - update-ca-certificates

    - export https_proxy="http://gatekeeper.mitre.org:80"

    # create a file called push_key that contains the $GITLAB_PUSH_KEY
    - mkdir -p /root/.ssh
    - echo "$GITLAB_PUSH_KEY" > ~/push_key
    - chmod 600 ~/push_key

    # configure git
    - git config --global user.email 'deployer@mitre.org' # Normally this is associated with the $GITLAB_PUSH_KEY
    - git config --global user.name 'inspec-dev Deployer' # Normally this is associated with the $GITLAB_PUSH_KEY

    # add gitlab to known_hosts to avoid "host key verification failed" error
    - touch ~/.ssh/known_hosts
    - echo $GITLAB_KEYSCAN >> ~/.ssh/known_hosts

  script:
    - git clone https://aaronlippold:$(echo $GITHUB_ACCESS_TOKEN)@github.com/aaronlippold/vulcan vulcan 2>/dev/null
    - cd vulcan
    - git remote add github git@gitlab.mitre.org:inspec/vulcan.git
    - ssh-agent sh -c 'ssh-add ~/push_key; git push --tags github master' # REMOTE NAME from previous line
    
build:
  stage: build
  image: docker:latest

  before_script:
    # add the MITRE certificates to the docker image
    - apk update && apk add git openssh-client ca-certificates py-pip bash
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_Root.crt $CRT_R
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_NPE_CA-1.crt $CRT_1
    - wget -O /usr/local/share/ca-certificates/MITRE_BA_NPE_CA-3.crt $CRT_3
    - update-ca-certificates
  
  script:
    # Configuration modification purely for inspec-dev
    # For service behind the Firewall connecting to gitlab
    - echo "$SED_PROXY" > sed-script-file
    - grep BA_Root Dockerfile || sed -f sed-script-file -i"" Dockerfile
    - git clone https://aaronlippold:$(echo $GITHUB_ACCESS_TOKEN)@github.com/aaronlippold/inspec-tools 2>/dev/null
    - sed -i 's/gem \"inspec_tools\".*$/gem \"inspec_tools\", :path => \"\.\/inspec-tools\"/' Gemfile
    - sed -i"" -e "s#3030#3031#g" docker-compose.yml # Run on port 3031
    # - cp config/ldap.example.yml config/ldap.yml
    # - sed -i"" -e "s#host.yourdomain.com#ldap-user.mitre.org#g" config/ldap.yml
    # - sed -i"" -e "s#yourdomain.com#mitre.org#g" config/ldap.yml
    # # The next line implies anonymous ldap authentication
    # - sed -i"" -e "/admin_/d" config/ldap.yml
    - pip install docker-compose
    # If you had a rake keys task, it would go here
    - docker-compose build
    - docker-compose run web rake db:setup || docker-compose run web rake db:migrate
    - docker-compose up -d
