name: Create release draft

# on:
#   schedule:
#     - cron: "0 0 * * 2" # Every Tuesday at midnight
on:
  push:
    branches:
      - release_actions

jobs:
  create_release_draft:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Vulcan Repository
        uses: actions/checkout@v3

      - name: Get current release version
        id: current_version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo;
            try {
              const latestRelease = await github.rest.repos.getLatestRelease(repo);
              return latestRelease.data.tag_name;
            } catch (error) {
              if (error.status === 404) {
                console.log('No releases found');
                return 'v2.0.0'; // Default value if there are no releases
              } else {
                console.error(error);
                throw error;
              }
            }

      - name: Calculate next release version
        id: next_version
        run: |
          export CURRENT_VERSION="${{ steps.current_version.outputs.result }}"
          export NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = ($NF + 1) % 10; if ($NF == 0) {$(NF-1) = ($(NF-1) + 1) % 10; if ($(NF-1) == 0) {$(NF-2)++;}} printf "v%d.%d.%d", $1, $2, $3}')
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=next_version::${NEW_VERSION}"

      - name: Read Release Notes
        id: release_notes
        run: |
          echo "::set-output name=notes::$(cat RELEASE_NOTES.md)"

      - name: Download source code as .zip and .tar.gz
        run: |
          wget -O source.zip https://github.com/mitre/vulcan/archive/refs/heads/master.zip
          wget -O source.tar.gz https://github.com/mitre/vulcan/archive/refs/heads/master.tar.gz

      - name: Create release draft
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo;
            const newVersion = process.env.NEW_VERSION;
            const releaseNotes = ${{ steps.release_notes.outputs.notes }};
            const response = await github.rest.repos.createRelease({
              ...repo,
              tag_name: newVersion,
              name: `vulcan ${newVersion}`,
              body: `${releaseNotes}`,
              draft: true,
            });
            return { id: response.data.id, upload_url: response.data.upload_url };

      - name: Upload source code .zip to release draft
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source.zip
          asset_name: source.zip
          asset_content_type: application/zip

      - name: Upload source code .tar.gz to release draft
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source.tar.gz
          asset_name: source.tar.gz
          asset_content_type: application/gzip
